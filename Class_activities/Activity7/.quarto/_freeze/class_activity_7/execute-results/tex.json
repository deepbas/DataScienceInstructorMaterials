{
  "hash": "df93e58ab134f6cef2e2ba8eb6793cd4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Class Activity 6\"\nauthor: \"Your name here\"\ndate: \" April 08 2024\"\nformat:\n  pdf: default\n  html:\n    df_print: paged\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  error: true\n---\n\n\n\n\n\n\n\n## Problem 1: Boolean Operators\n\nUse Boolean operators to alter the code below to return only the rows that contain:\n\n### a. Girls named Rhea\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### b. Names that were used by exactly 5 or 6 children in 1990\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### c. Names that are one of Apple, Yoroi, Ada\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### d. Store the data tibble in part c into a new tibble and change all the character columns to upper case. Also, rename the `n` variable to `count`.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### e. Change all the column names to upper case in the previous problem.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n### f. What do these commands do?\n\n```r\npolluted_cities %>% select_if(is.numeric) #1\npolluted_cities %>% rename_all(toupper) #2\npolluted_cities %>% rename_if(is.character, toupper) #3\npolluted_cities %>% rename_at(vars(contains(\"it\")), toupper) #4\n```\n\n*answer:*\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n-----------------------------------------------------------------------------------\n\nLet's look at an interesting example on how to join related information on various artists, bands, songs, and their labels.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nartists <- tibble(first = c(\"Jimmy\", \"George\", \"Mick\", \"Tom\", \"Davy\", \"John\",\n                            \"Paul\", \"Jimmy\", \"Joe\", \"Elvis\", \"Keith\", \"Paul\", \n                            \"Ringo\", \"Joe\", \"Brian\", \"Nancy\"), \n                  last = c(\"Buffett\", \"Harrison\", \"Jagger\", \"Jones\", \"Jones\", \n                           \"Lennon\", \"McCartney\", \"Page\", \"Perry\", \"Presley\",\n                           \"Richards\", \"Simon\", \"Starr\", \"Walsh\", \"Wilson\", \"Wilson\"), \n                  instrument = c(\"Guitar\", \"Guitar\", \"Vocals\", \"Vocals\", \"Vocals\",\n                                 \"Guitar\", \"Bass\", \"Guitar\", \"Guitar\", \"Vocals\", \"Guitar\", \n                                 \"Guitar\", \"Drums\", \"Guitar\", \"Vocals\", \"Vocals\"))\n\n\nbands <- tibble(first = c(\"John\", \"John Paul\", \"Jimmy\", \"Robert\", \"George\", \"John\", \n                          \"Paul\", \"Ringo\", \"Jimmy\", \"Mick\", \"Keith\", \"Charlie\", \"Ronnie\"), \n                last = c(\"Bonham\", \"Jones\", \"Page\", \"Plant\", \"Harrison\", \"Lennon\",\n                         \"McCartney\", \"Starr\", \"Buffett\", \"Jagger\", \"Richards\", \"Watts\", \"Wood\"), \n                band = c(\"Led Zeppelin\", \"Led Zeppelin\", \"Led Zeppelin\", \"Led Zeppelin\",\n                         \"The Beatles\", \"The Beatles\", \"The Beatles\", \"The Beatles\",\n                         \"The Coral Reefers\", \"The Rolling Stones\", \"The Rolling Stones\",\n                         \"The Rolling Stones\", \"The Rolling Stones\"))\n\nalbums <- tibble(album = c(\"A Hard Day's Night\", \"Magical Mystery Tour\", \"Beggar's Banquet\",\n                           \"Abbey Road\", \"Led Zeppelin IV\", \"The Dark Side of the Moon\", \"Aerosmith\",\n                           \"Rumours\", \"Hotel California\"),\n                 band = c(\"The Beatles\", \"The Beatles\", \"The Rolling Stones\", \"The Beatles\", \n                          \"Led Zeppelin\", \"Pink Floyd\", \"Aerosmith\", \"Fleetwood Mac\", \"Eagles\"), \n                 year = c(1964,1967,1968,1969,1971,1973,1973,1977,1982))\n\n\nsongs <- tibble(song = c(\"Come Together\", \"Dream On\", \"Hello, Goodbye\", \"It's Not Unusual\"),\n                album  = c(\"Abbey Road\", \"Aerosmith\", \"Magical Mystery Tour\", \"Along Came Jones\"), \n                first = c(\"John\", \"Steven\", \"Paul\", \"Tom\"), \n                last = c(\"Lennon\", \"Tyler\", \"McCartney\", \"Jones\"))\n\n\nlabels <- tibble(album = c(\"Abbey Road\", \"A Hard Days Night\", \"Magical Mystery Tour\",\n                           \"Led Zeppelin IV\", \"The Dark Side of the Moon\", \"Hotel California\", \n                           \"Rumours\", \"Aerosmith\", \"Beggar's Banquet\"), \n                 label = c(\"Apple\", \"Parlophone\", \"Parlophone\", \"Atlantic\", \"Harvest\",\n                           \"Asylum\", \"Warner Brothers\", \"Columbia\", \"Decca\"))\n```\n:::\n\n\n\n\n\nLet's take a glimpse of the tibbles `artists` and `bands`. Notice that there are different number of rows in the dataset.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(artists)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 16\nColumns: 3\n$ first      <chr> \"Jimmy\", \"George\", \"Mick\", \"Tom\", \"Davy\", \"John\", \"Paul\", \"~\n$ last       <chr> \"Buffett\", \"Harrison\", \"Jagger\", \"Jones\", \"Jones\", \"Lennon\"~\n$ instrument <chr> \"Guitar\", \"Guitar\", \"Vocals\", \"Vocals\", \"Vocals\", \"Guitar\",~\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(bands)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 13\nColumns: 3\n$ first <chr> \"John\", \"John Paul\", \"Jimmy\", \"Robert\", \"George\", \"John\", \"Paul\"~\n$ last  <chr> \"Bonham\", \"Jones\", \"Page\", \"Plant\", \"Harrison\", \"Lennon\", \"McCar~\n$ band  <chr> \"Led Zeppelin\", \"Led Zeppelin\", \"Led Zeppelin\", \"Led Zeppelin\", ~\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(albums)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 9\nColumns: 3\n$ album <chr> \"A Hard Day's Night\", \"Magical Mystery Tour\", \"Beggar's Banquet\"~\n$ band  <chr> \"The Beatles\", \"The Beatles\", \"The Rolling Stones\", \"The Beatles~\n$ year  <dbl> 1964, 1967, 1968, 1969, 1971, 1973, 1973, 1977, 1982\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(songs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 4\nColumns: 4\n$ song  <chr> \"Come Together\", \"Dream On\", \"Hello, Goodbye\", \"It's Not Unusual\"\n$ album <chr> \"Abbey Road\", \"Aerosmith\", \"Magical Mystery Tour\", \"Along Came J~\n$ first <chr> \"John\", \"Steven\", \"Paul\", \"Tom\"\n$ last  <chr> \"Lennon\", \"Tyler\", \"McCartney\", \"Jones\"\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(labels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 9\nColumns: 2\n$ album <chr> \"Abbey Road\", \"A Hard Days Night\", \"Magical Mystery Tour\", \"Led ~\n$ label <chr> \"Apple\", \"Parlophone\", \"Parlophone\", \"Atlantic\", \"Harvest\", \"Asy~\n```\n\n\n:::\n:::\n\n\n\n\n\n## Problem 2: Joining artists and bands data\n\n\n### a. Join the artists and bands tibbles using `left_join()`, `right_join()`, and `full_join()`. Verify that the datasets obtained from `left_join()` and `right_join()` are the same using `setequal()`.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### b. Use the pipe operator, `%>%`, to create one table that combines all information from `artists`, `bands`, `albums`, `songs`, and `labels.`\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n-----------------------------------------------------------------------------------\n\n## Problem 3: Filtering and counting rows in the data\n\n### a. Collect artists that have songs provided, and return rows of artists that don't have bands info.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n### b. Collect the albums made by a band, count the number of rows, find the rows of songs that match a row in labels, and count the number of rows.\n\n\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}