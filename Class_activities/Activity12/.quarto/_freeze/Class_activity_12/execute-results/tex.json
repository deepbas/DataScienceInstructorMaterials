{
  "hash": "2291bcf225322182e49a8cbc4109ceac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Class Activity 12\"\nauthor: \"Your name here\"\ndate: \" April 18 2024\"\nformat:\n  pdf: default\n  html:\n    df_print: paged\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  error: true\n---\n\n\n\n\n\n\n\nIn this tutorial, we will learn about string manipulations using regular expressions and the `stringr` library in R. We will cover different examples and use cases to help you understand the concepts and functions related to string manipulation.\n\n\n## Group Activity 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- \"My SSN is 593-29-9502 and my age is 55\"\ny <- \"My phone number is 612-643-1539\"\nz <- \"My old SSN number is 39532 9423.\"\nout <- str_flatten(c(x,y,z), collapse = \". \")\n```\n:::\n\n\n\n\n### a. What characters in `x` will `str_view_all(x, \"-..-\")` find?\n\n*answer:*\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### b. What pattern will `str_view_all(x, \"-\\\\d{2}-\")` find?\n\n*answer:*\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### c. What pattern will `str_view_all(out, \"\\\\d{2}\\\\.*\")` find?\n\n*answer:*\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n### d. Use `str_view_all` to determine the correct regex pattern to identify all SSN in `out`\n\n*answer:*\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nThis misses the oddly formatted SSN in the third entry. Rather than use a dash, we can specify the divider as `[-\\\\s]?` which allows either 0 or 1 occurrences of either a dash or space divider:\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n### e. Write a regular expression to extract dates in the format YYYY-MM-DD from a given text.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndate_pattern <- \"\"\ntext <- \"The event will take place on 2023-07-20 and end on 2023-07-22.\"\nstr_extract_all(text, date_pattern)\n## [[1]]\n##  [1] \"T\" \"h\" \"e\" \" \" \"e\" \"v\" \"e\" \"n\" \"t\" \" \" \"w\" \"i\" \"l\" \"l\" \" \" \"t\" \"a\" \"k\" \"e\"\n## [20] \" \" \"p\" \"l\" \"a\" \"c\" \"e\" \" \" \"o\" \"n\" \" \" \"2\" \"0\" \"2\" \"3\" \"-\" \"0\" \"7\" \"-\" \"2\"\n## [39] \"0\" \" \" \"a\" \"n\" \"d\" \" \" \"e\" \"n\" \"d\" \" \" \"o\" \"n\" \" \" \"2\" \"0\" \"2\" \"3\" \"-\" \"0\"\n## [58] \"7\" \"-\" \"2\" \"2\" \".\"\n```\n:::\n\n\n\n\n*answer:*\n\n\n### f. Write a regular expression to extract all words that start with a capital letter in a given text.\n\n*answer:*\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncapital_pattern <- \"\"\ntext <- \"Alice and Bob went to the Market to buy some Groceries.\"\nstr_extract_all(text, capital_pattern)\n## [[1]]\n##  [1] \"A\" \"l\" \"i\" \"c\" \"e\" \" \" \"a\" \"n\" \"d\" \" \" \"B\" \"o\" \"b\" \" \" \"w\" \"e\" \"n\" \"t\" \" \"\n## [20] \"t\" \"o\" \" \" \"t\" \"h\" \"e\" \" \" \"M\" \"a\" \"r\" \"k\" \"e\" \"t\" \" \" \"t\" \"o\" \" \" \"b\" \"u\"\n## [39] \"y\" \" \" \"s\" \"o\" \"m\" \"e\" \" \" \"G\" \"r\" \"o\" \"c\" \"e\" \"r\" \"i\" \"e\" \"s\" \".\"\n```\n:::\n\n\n\n\n\n\n-----------------------------------------------------------------------------------\n\n## Group Activity 2\n\n\nConsider the following string:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstring1 <- \"100 dollars 100 pesos\"\n```\n:::\n\n\n\n\n### a. Explain why the following matches the first 100 and not the second.\n\n*answer:* \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(string1, \"\\\\d+(?= dollars)\")\n## [1] | <100> dollars 100 pesos\n```\n:::\n\n\n\n\n### b. Explain why the following matches the second 100 and not the first.\n\n*answer:* \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(string1, \"\\\\d+(?!\\\\d| dollars)\")\n## [1] | 100 dollars <100> pesos\n```\n:::\n\n\n\n\n\nPlease take a look at `string2`:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstring2 <- \"USD100 PESO100\"\n```\n:::\n\n\n\n\n### c. Explain why the following matches the first 100 and not the second.\n\n*answer:* \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(string2, \"(?<=USD)\\\\d{3}\")\n## [1] | USD<100> PESO100\n```\n:::\n\n\n\n\n\n### d. Explain why the following matches the second 100 and not the first.\n\n*answer:* \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(string2, \"(?<!USD)\\\\d{3}\")\n## [1] | USD100 PESO<100>\n```\n:::\n\n\n\n\n\n-------------------------------------------------------------------\n\n##  Group Activity 3\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets<- read_csv(\"https://raw.githubusercontent.com/deepbas/statdatasets/main/TrumpTweetData.csv\")\n```\n:::\n\n\n\n\n### a. What proportion of tweets (text) mention \"America\"?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets %>% \n  summarize(prop = mean(str_detect(str_to_title(text), \"America\"))) \n## # A tibble: 1 x 1\n##     prop\n##    <dbl>\n## 1 0.0926\n```\n:::\n\n\n\n\n### b. What proportion of these tweets include \"great\"?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets %>% \n  \n## Error: <text>:3:0: unexpected end of input\n## 1: tweets %>% \n## 2:   \n##   ^\n```\n:::\n\n\n\n\n### c. What proportion of the tweets mention `@`?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets %>% \n## Error: <text>:2:0: unexpected end of input\n## 1: tweets %>% \n##    ^\n```\n:::\n\n\n\n\n\n### d. Remove the tweets having mentions `@`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMentions <- c(\"@[^\\\\s]+\")\n\ntw_noMentions <- tweets %>% \n## Error: <text>:4:0: unexpected end of input\n## 2: \n## 3: tw_noMentions <- tweets %>% \n##   ^\n```\n:::\n\n\n\n\n### e. What poportion of tweets originated from an iPhone?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets %>% \n## Error: <text>:2:0: unexpected end of input\n## 1: tweets %>% \n##    ^\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}