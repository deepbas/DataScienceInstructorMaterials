{
  "hash": "c2d7e30575f45cae3e4da023e3e6e003",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Advanced String Manipulation\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"STAT 220\"\nauthor: \"Bastola\"\nformat:\n  revealjs: \n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: true\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n\n## Last time: Quantifiers and Special Characters\n\n\n::: {.row .eqt}\n::: left\n\nPreceding characters are matched ...\n\n- [`*`]{.yellow-h} = 0 or more\n- [`?`]{.yellow-h} = 0 or 1\n- [`+`]{.yellow-h} = 1 or more\n- [`{n}`]{.yellow-h} = exactly n times\n\n:::\n\n::: right\n\n\nMatching character types\n\n- [`\\\\d`]{.yellow-h} = digit\n- [`\\\\s`]{.yellow-h} = white space\n- [`\\\\w`]{.yellow-h} = alphanumeric\n- [`\\\\t`]{.yellow-h} = tab\n- [`\\\\n`]{.yellow-h} = newline\n\n:::\n:::\n\n\n[`stringr` [cheatsheet](https://rstudio.github.io/cheatsheets/strings.pdf)]{.footer}\n\n\n## More quantifiers\n\n\n> useful when you want to match a pattern a specific number of times\n\n::: eqt\n\n- [`{n, }`]{.yellow-h} = n or more times\n\n- [`{, m}`]{.yellow-h} =  at most m times\n\n- [`{n, m}`]{.yellow-h} = between n & m times\n\n:::\n\n\n## Alternatives\n\n\n> useful for matching patterns more flexibly\n\n::: eqt\n\n- [`[abc]`]{.yellow-h} = one of [a]{.yellow-h}, [b]{.yellow-h}, or [c]{.yellow-h}\n\n- [`[e-z]`]{.yellow-h} = a letter from [e]{.yellow-h} to [z]{.yellow-h}\n\n- [`[^abc]`]{.yellow-h} = anything other than [a]{.yellow-h}, [b]{.yellow-h}, or [c]{.yellow-h}\n\n:::\n\n\n## Duplicating Groups\n\n> Use escaped numbers (\\\\\\1, \\\\\\2, etc) to repeat a group based on position\n\n\n::: eqt\n\nWhich numbers have the same 1st and 3rd digits?\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ <515> <111> 2244\n[3] │ <474> 234 7548\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<details>\n<summary class=\"answer\">Explanation</summary>\n\n[`(\\\\d)` matches a single digit (from 0 to 9) and captures it into a capturing group. `\\\\d` matches another single digit (from 0 to 9). `\\\\1` matches the same digit as the first captured group. \n]{.font60}\n\n</details>\n\n\n\n\n## `str_view_all()`\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ Moly Robins: <250-999-8878>\n[2] │ Ali Duluth: <416-908-2044>\n[3] │ Eli Mitchell: <204.192.9829>\n[4] │ May Flowers: <250.209.7047>\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<details>\n<summary class=\"answer\">Explanation</summary>\n[([2-9][0-9]{2}) captures the area code (3 digits), ([0-9]{3}) captures the next 3 digits, ([0-9]{4}) captures the last 4 digits]{.font80}\n</details>\n\n\n\n## `str_replace_all()`\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Moly Robins: XXX-XXX-XXXX\"  \"Ali Duluth: XXX-XXX-XXXX\"  \n[3] \"Eli Mitchell: XXX-XXX-XXXX\" \"May Flowers: XXX-XXX-XXXX\" \n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Moly Robins: 250-999-XXXX\"  \"Ali Duluth: 416-908-XXXX\"  \n[3] \"Eli Mitchell: 204-192-XXXX\" \"May Flowers: 250-209-XXXX\" \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## `str_extract_all()`\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1]   [,2]      \n[1,] \"Moly\" \"Robins\"  \n[2,] \"Ali\"  \"Duluth\"  \n[3,] \"Eli\"  \"Mitchell\"\n[4,] \"May\"  \"Flowers\" \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Repetition\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nRepetition using `?`\n\n\n\n::: {.cell}\n\n```\n## [1] │ my< >SSN< >is< 5>36-76-9423< >and< >my< >age< >is< 5>5\n```\n:::\n\n\n\n\n\nRepetition using `+`\n\n\n\n\n::: {.cell}\n\n```\n## [1] │ my SSN is< 536>-76-9423 and my age is< 55>\n```\n:::\n\n\n\n\n\nRepetition using `*`\n\n\n\n::: {.cell}\n\n```\n## [1] │ my< >SSN< >is< 536>-76-9423< >and< >my< >age< >is< 55>\n```\n:::\n\n\n\n:::\n\n\n## Case conversion\n\n::: cle\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"beauty is in the eye of the beholder\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ONE SMALL STEP FOR MAN, ONE GIANT LEAP FOR MANKIND\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Aspire To Inspire Before We Expire\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Everything you can imagine is real\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n::: middle-align-xy\n\n## Alternates: OR\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ My phone number is 23<6->74<8>-450<8>.\n```\n\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ My phone number is 23<6->74<8->4508.\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n\n## More Duplicating Groups\n\n::: bbb\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.row .font100}\n::: left\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ a<dd>idas\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[2] │ <racecar>\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ ad<did>as\n[2] │ ra<cec>ar\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Finding patterns\n\n::: bbb\n::: row\n::: left\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ it's a <goat.>\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ <it's> a goat.\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ it's< a> goat.\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: centered-content\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 1</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please clone the `ca12-yourusername` repository from  [Github](https://github.com/DataScienceSpring24)\n- Please do the problem 1 in the class activity for today\n:::\n:::\n:::\n\npreservefc4c336f144ae73f\n:::\n\n\n\n\n\n<!-- \n  [`(?=)`] = look ahead, e.g. `i(?=e)` = [i] when it comes before [e]\n\n- [`(?!)`] = negative look ahead, e.g. `i(?!e)` [i] when it comes before something that isn’t [e]\n\n- [`(?<)`] = look behind, e.g. `(?<=e)i` = [i] when it follows [e]\n\n- [`(?<!)`] = negative look behind, e.g. `(?<!e)i` = [i] when it does not follow [e]\n\n-->\n\n\n## `Lookaround` operators\n\n<br>\n\n<img src=\"images/lookaround.png\" width=\"100%\" height=\"100%\"> <br>\n\n\n[Source: click [here](https://www.rexegg.com/regex-lookarounds.html#nav)]{.footer}\n\n\n\n## Positive Look ahead example\n\n\n> [Positive look ahead]{.green-h} operator `x(?=[y])` will find `x` when it comes before `y`\n\n> [Negative]{.green-h} version is `x(?![y])` (`x` when it comes before something that isn’t `y`)\n\n::: ws\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ it's a <goat>.\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Negative Look ahead example\n\n\n> [Positive look ahead]{.green-h} operator `x(?=[y])` will find `x` when it comes before `y`\n\n> [Negative]{.green-h} version is `x(?![y])` (`x` when it comes before something that isn’t `y`)\n\n::: ws\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ i<t>'s a goat.\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n## Positive Look behind example\n\n> [Positive look behind]{.green-h} operator `(?<=[x])y` will find `y` when it follows `x`\n\n> [Negative]{.green-h} version is `(?<![x])y` (`y` when it does not follow `x`)\n\n::: ws\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ tha<t> is a top ca<t>.\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Negative Look behind example\n\n> [Positive look behind]{.green-h} operator `(?<=[x])y` will find `y` when it follows `x`\n\n> [Negative]{.green-h} version is `(?<![x])y` (`y` when it does not follow `x`)\n\n::: ws\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] │ <that> is a <top> cat.\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: centered-content\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 2</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please do the remaining problems in the class activity.\n- Submit to Gradescope on [moodle](https://moodle.carleton.edu/course/view.php?id=43692) when done!\n:::\n:::\n:::\n\npreserve434b8514aa888ee8\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"Day12_files/libs/countdown/countdown.css\" rel=\"stylesheet\" />\n<script src=\"Day12_files/libs/countdown/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {
      "preserve434b8514aa888ee8": "<div class=\"countdown\" id=\"timer_410e4c87\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>",
      "preservefc4c336f144ae73f": "<div class=\"countdown\" id=\"timer_1eaa3d7c\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>"
    },
    "postProcess": true
  }
}