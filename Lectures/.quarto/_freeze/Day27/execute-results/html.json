{
  "hash": "b845ac242fb7aa357afeae1be9299066",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Decision Trees and Random Forest\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"STAT 220\"\nauthor: \"Bastola\"\nformat:\n  revealjs: \n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: true\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\nfilters:\n  - shinylive\n  - webr\n---\n\n\n\n\n\n\n\n\n## Decision Tree\n\n::: zen\n::: font80\n\nA decision tree algorithm learns by repeatedly splitting the dataset into increasingly smaller subsets to accurately predict the target value.\n\n\n\n::: row\n::: left\n\n- Data is continuously split according to a certain parameter\n\n- Two main entities:\n\n  + nodes: where the data is split\n  + leaves: decisions or final outcomes\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/taylor-tree.png){width=314}\n:::\n:::\n\n\n\n:::\n:::\n\n:::\n:::\n\n## Decision Tree\n\n::: cle\n::: font90\n\nUse features to make subsets of cases that are as similar (“pure”) as possible with respect to the outcome\n\n- Start with all observations in one group\n- Find the variable/feature/split that best separates the outcome\n- Divide the data into two groups (leaves) on the split (node)\n- Within each split, find the best variable/split that separates the outcomes\n- Continue until the groups are too small or sufficiently “pure”\n\n:::\n:::\n\n## Data preparation and pre-processing\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n## Model Specification\n\n::: cle\n\n- **cost_complexity**: The cost complexity parameter, the minimum improvement in the model needed at each node\n- **tree_depth**: The maximum depth of a tree\n- **min_n**: The minimum number of data points in a node that are required for the node to be split further.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n## Workflow and Hyperparameter tuning\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n## View grid\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n   cost_complexity tree_depth min_n\n             <dbl>      <int> <int>\n 1        5.28e-10          7    40\n 2        2.99e- 6          3     7\n 3        1.30e- 8          1    17\n 4        1.94e- 2         13    19\n 5        1.74e- 7         11    22\n 6        8.11e- 7          6     3\n 7        2.41e- 6          4    10\n 8        1.01e- 5         14    40\n 9        2.38e- 2          4    18\n10        2.68e- 6         15    39\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [Tuning Hyperparameters with `tune_grid()`]{.font80}\n\n::: vvt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  cost_complexity tree_depth min_n .config              \n            <dbl>      <int> <int> <chr>                \n1        5.28e-10          7    40 Preprocessor1_Model01\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## \n\n::: zen\nFinalize workflow and fit the model\n\n::: font80\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Day27_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n:::\n:::\n\n## Plot the tree\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrpart.plot(tree_fit$fit, roundint = FALSE)\n```\n\n::: {.cell-output-display}\n![](Day27_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n::: middle-align-xy\n\n## Train and Evaluate With `last_fit()`\n\n::: mre\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  .metric     .estimator .estimate .config             \n  <chr>       <chr>          <dbl> <chr>               \n1 accuracy    binary         0.765 Preprocessor1_Model1\n2 roc_auc     binary         0.824 Preprocessor1_Model1\n3 brier_class binary         0.153 Preprocessor1_Model1\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n\n## Confusion matrix\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day27_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n\n\n::: centered-content\n\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 1</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please clone the `ca27-yourusername` repository from  [Github](https://github.com/DataScienceSpring24)\n- Please do problem 1 in the class activity for today\n:::\n:::\n:::\n\n`<div class=\"countdown\" id=\"timer_c1fc72de\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">20</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n:::\n\n\n\n## Random Forest\n\n::: cle\n::: font80\n\nRandom forests take decision trees and construct more powerful models in terms of prediction accuracy.\n\n- <!--The main mechanism that powers this algorithm is--> **Repeated sampling (with replacement)** of the training data to produce a sequence of decision tree models. \n\n- These models are then averaged to obtain a single prediction for a given value in the predictor space.\n\n- The random forest model selects a random subset of predictor variables for splitting the predictor space in the tree building process. <!--This is done for every iteration of the algorithm, typically 100 to 2,000 times.-->\n\n:::\n:::\n\n## Model Specification\n\n::: cle\n\n- **mtry**: The number of predictors that will be randomly sampled at each split when creating the tree models\n- **trees**: The number of decision trees to fit and ultimately average\n- **min_n**: The minimum number of data points in a node that are required for the node to be split further\n\n:::\n\n\n## [Model, Workflow and Hyperparameter Tuning]{.font80}\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n\n## View Grid\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 3\n    mtry trees min_n\n   <int> <int> <int>\n 1     7   609    32\n 2     5  1235     6\n 3     4  1822    29\n 4     5   678    16\n 5     4   138    14\n 6     3  1218    19\n 7     7   228    14\n 8     5   873     4\n 9     6  1387    10\n10     7  1717     5\n11     5   436     4\n12     3  1175    16\n13     6  1909    33\n14     6   118     4\n15     2  1003    24\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n\n## Tuning Hyperparameters with `tune_grid()`\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n   mtry trees min_n .config              \n  <int> <int> <int> <chr>                \n1     2  1003    24 Preprocessor1_Model15\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n::: middle-align-xy\n\n## Finalize workflow\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nVariable Importance\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n:::\n\n\n## Variable Importance\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day27_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n\n\n\n\n::: centered-content\n\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 2</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n<br>\n\n::: lqt\n\n- Please finish the remaining problems in the class activity for today\n\n:::\n:::\n:::\n\n`<div class=\"countdown\" id=\"timer_8dcb913a\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n:::\n\n",
    "supporting": [
      "Day27_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"Day27_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"Day27_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}