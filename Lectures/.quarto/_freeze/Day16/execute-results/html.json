{
  "hash": "0a56e519fbea0d670025cabd81fa9452",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Web Scraping\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"STAT 220\"\nauthor: \"Bastola\"\nformat:\n  revealjs: \n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: true\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n\n\n\n::: middle-align-xy\n\n## Web scraping\n\n::: vvt\n\nthe process of downloading, parsing, and extracting data presented in an HTML file and then converting it into a structured format that allows us to analyze it.\n\n:::\n\n:::\n\n::: middle-align-xy\n\n## Two different scenarios:\n\n::: zen\n\n1. Screen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy).\n\n2. Web APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files.\n\n\n:::\n:::\n\n<!-- API is a messenger that takes requests, and then returns a response back to you -->\n\n\n##  `polite` package\n\n\n:::: {.columns}\n\n::: {.column width=\"20%\"}\n\n![](images/polite.png)\n\n:::\n\n::: {.column width=\"80%\"}\n\n::: zen\n\n- Two main functions `bow` and `scrape` define and realize a web harvesting session\n- Builds on awesome toolkits for defining and managing http sessions using `rvest`\n\n:::\n\n:::\n:::\n\n[[Polite Documentation](https://www.rdocumentation.org/packages/polite/versions/0.1.2)]{.footer}\n\n\n## Can we scrape this webpage?\n\n\n![](images/mncorn.png)\n\n[[https://www.mncorn.org/corn-facts/](https://www.mncorn.org/corn-facts/)]{.footer}\n\n\n## `polite`:: bow()  {auto-animate=\"true\"}\n\n::: vvt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n<polite session> https://www.mncorn.org/corn-facts/\n    User-agent: data enthusiast\n    robots.txt: 2 rules are defined for 1 bots\n   Crawl delay: 5 sec\n  The path is scrapable for this user-agent\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## `polite`:: scrape() {auto-animate=\"true\"}\n\n::: vvt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n{html_document}\n<html lang=\"en-US\" class=\"no-js\" itemtype=\"https://schema.org/WebPage\" itemscope=\"\">\n[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] <body class=\"page-template-default page page-id-11415 wp-custom-logo wp-e ...\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## HyperText Markup Language (HTML)\n\n<!-- \n\n- Each line of code tells the browser how to show every element in your display by assigning tags to each component within the body tag. -->\n\n<!-- - Most of the data on the web is still largely available as HTML -->\n\n::: vvt\n\nHTML page consists of series of elements which browsers use to interpret how to display the content\n\n<center>\n<img src=\"images/html.png\"  width=\"600\" height=\"400\" class=\"center\">\n</center>\n\n:::\n\n<!--\n- Contains all the metadata inside the head tag\n\n- Only need to understand the document’s body tag as there’s where the content we want to scrape resides.\n\n-->\n\n\n\n## HyperText Markup Language (HTML)\n\n::: eqt\n\nWhile it is structured (hierarchical/tree based) it often is not available in a form useful for analysis (flat/tidy).\n\n\n```html\n<html>\n  <head>\n    <title>This is a title</title>\n  </head>\n  <body>\n    <p align=\"center\">Hello world!</p>\n  </body>\n</html>\n```\n\n:::\n\n[Try HTML code yourself by clicking [here](https://www.w3schools.com/html/tryit.asp?filename=tryhtml_default_default)]{.footer}\n\n\n\n## HTML tags\n\n::: dse\n::: font80\n\nHTML uses `tags` to describe different aspects of document content. `Rvest` is a collection of functions that make basic processing and manipulation of HTML data straight forward.\n\n\nTag         |  Example\n------------|---------------------------------------------------------------\nheading     | `<h1>My Title</h1>`\nparagraph   | `<p>A paragraph of content...</p>`\ntable       | `<table> ... </table>`\nanchor (with attribute)     | `<a href=\"https://www.mncorn.org/\">click here for link</a>`\n\n:::\n:::\n\n\n\n\n::: {.column-screen}\n\n## \n\n\n\n```{=html}\n<iframe width=\"1080\" height=\"1000\" src=\"https://rvest.tidyverse.org/\"></iframe>\n```\n\n\n\n[[Rvest](https://rvest.tidyverse.org/) documentation]{.footer}\n\n:::\n\n\n\n## Useful functions\n\n::: cle\n::: font60\n\nFunction      | Description\n--------------|---------------------------------------------\n`read_html`   | Read HTML data from a url or character string\n`html_element`| Find HTML element using CSS selectors \n`html_elements`| Find HTML elements using CSS selectors \n`html_node`  | Select a specified node from HTML document\n`html_nodes`  | Select specified nodes from HTML document\n`html_table`  | Parse an HTML table into a data frame\n`html_text`   | Extract tag pairs' content\n`html_name`   | Extract tags' names\n`html_attrs`  | Extract all of each tag's attributes\n`html_attr`   | Extract tags' attribute value by name\n\n:::\n:::\n\n## \n\n<center>\n![](images/f1_drivers.png)\n</center>\n\n[[https://en.wikipedia.org/wiki/List_of_Formula_One_drivers](https://en.wikipedia.org/wiki/List_of_Formula_One_drivers)]{.footer}\n\n\n## Read Wikipedia Tables into R {auto-animate=\"true\"}\n\n::: scroll-box-20\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n<polite session> https://en.wikipedia.org/wiki/List_of_Formula_One_drivers\n    User-agent: polite R package\n    robots.txt: 456 rules are defined for 33 bots\n   Crawl delay: 5 sec\n  The path is scrapable for this user-agent\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n\n## Read Wikipedia Tables into R {auto-animate=\"true\"}\n\n::: scroll-box-20\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n{html_document}\n<html class=\"client-nojs vector-feature-language-in-header-enabled vector-feature-language-in-main-page-header-disabled vector-feature-sticky-header-disabled vector-feature-page-tools-pinned-disabled vector-feature-toc-pinned-clientpref-1 vector-feature-main-menu-pinned-disabled vector-feature-limited-width-clientpref-1 vector-feature-limited-width-content-enabled vector-feature-custom-font-size-clientpref-1 vector-feature-appearance-enabled vector-feature-appearance-pinned-clientpref-1 vector-feature-night-mode-enabled skin-theme-clientpref-day vector-toc-not-available\" lang=\"en\" dir=\"ltr\">\n[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] <body class=\"skin--responsive skin-vector skin-vector-search-vue mediawik ...\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n## Read Wikipedia Tables into R {auto-animate=\"true\"}\n\n::: scroll-box-20\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n# A tibble: 6 × 1\n  `Formula One`                                                                 \n  <chr>                                                                         \n1 \"Current season\\n2024 Formula One World Championship\"                         \n2 \"Related articles\\nHistory of Formula One\\nFormula One racing\\nFormula One re…\n3 \"Lists\\nDrivers (GP winnersSprint winnersPolesittersFastest lapsChampionsNumb…\n4 \"Records\\nDrivers\\nConstructors\\nEngines\\nTyres\\nRaces\"                       \n5 \"Organisations\\nFIA\\nFIA World Motor Sport Council\\nFormula One Group\\nLibert…\n6 \".mw-parser-output .navbar{display:inline;font-size:88%;font-weight:normal}.m…\n\n[[2]]\n# A tibble: 3 × 2\n  Symbol Meaning                                                                \n  <chr>  <chr>                                                                  \n1 ~      Currently active world champions(driver competes in 2024 and has won t…\n2 *      Currently active drivers(driver competes in 2024 and has not won the W…\n3 ^      Former world champions(driver has won the World Drivers' Championship …\n\n[[3]]\n# A tibble: 869 × 11\n   `Driver name`     Nationality    `Seasons competed` `Drivers' Championships`\n   <chr>             <chr>          <chr>              <chr>                   \n 1 Carlo Abate       Italy          1962–1963          0                       \n 2 George Abecassis  United Kingdom 1951–1952          0                       \n 3 Kenny Acheson     United Kingdom 1983, 1985         0                       \n 4 Andrea de Adamich Italy          1968, 1970–1973    0                       \n 5 Philippe Adams    Belgium        1994               0                       \n 6 Walt Ader         United States  1950               0                       \n 7 Kurt Adolff       West Germany   1953               0                       \n 8 Fred Agabashian   United States  1950–1957          0                       \n 9 Kurt Ahrens Jr.   West Germany   1966–1969          0                       \n10 Jack Aitken       United Kingdom 2020               0                       \n# ℹ 859 more rows\n# ℹ 7 more variables: `Race entries` <chr>, `Race starts` <chr>,\n#   `Pole positions` <chr>, `Race wins` <chr>, Podiums <chr>,\n#   `Fastest laps` <chr>, `Points[a]` <chr>\n\n[[4]]\n# A tibble: 42 × 7\n   Country    Totaldrivers Champions Championships `Race wins` `First driver(s)`\n   <chr>      <chr>        <chr>     <chr>         <chr>       <chr>            \n 1 Argentina… 25           1(Fangio… 5(1951, 1954… \"38\\n(Fang… Juan Manuel Fang…\n 2 Australia… 18           2(Brabha… 4(1959, 1960… \"44\\n(Brab… Tony Gaze(1952 B…\n 3 Austriade… 16           2(Rindt,… 4(1970, 1975… \"41\\n(Rind… Jochen Rindt(196…\n 4 Belgiumde… 25           0         0             \"11\\n(Ickx… Johnny Claes(195…\n 5 Brazildet… 32           3(Fittip… 8(1972, 1974… \"101\\n(Fit… Chico Landi(1951…\n 6 Canadadet… 15           1(J. Vil… 1(1997)       \"17\\n(G. V… Peter Ryan(1961 …\n 7 Chile      1            0         0             \"0\"         Eliseo Salazar(1…\n 8 China      1            0         0             \"0\"         Zhou Guanyu(2022…\n 9 Colombiad… 3            0         0             \"7\\n(Monto… Ricardo Londoño(…\n10 Czech Rep… 1            0         0             \"0\"         Tomáš Enge(2001 …\n# ℹ 32 more rows\n# ℹ 1 more variable: `Most recent driver(s)/Current driver(s)` <chr>\n\n[[5]]\n# A tibble: 1 × 2\n  `vteFormula One drivers by country`                     vteFormula One drive…¹\n  <chr>                                                   <chr>                 \n1 \"Argentina\\nAustralia\\nAustria\\nBelgium\\nBrazil\\nCanad… \"Argentina\\nAustralia…\n# ℹ abbreviated name: ¹​`vteFormula One drivers by country`\n```\n\n\n:::\n:::\n\n\n:::\n\n\n\n## Read Wikipedia Tables into R {auto-animate=\"true\"}\n\n::: scroll-box-20\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 869 × 11\n   `Driver name`     Nationality    `Seasons competed` `Drivers' Championships`\n   <chr>             <chr>          <chr>              <chr>                   \n 1 Carlo Abate       Italy          1962–1963          0                       \n 2 George Abecassis  United Kingdom 1951–1952          0                       \n 3 Kenny Acheson     United Kingdom 1983, 1985         0                       \n 4 Andrea de Adamich Italy          1968, 1970–1973    0                       \n 5 Philippe Adams    Belgium        1994               0                       \n 6 Walt Ader         United States  1950               0                       \n 7 Kurt Adolff       West Germany   1953               0                       \n 8 Fred Agabashian   United States  1950–1957          0                       \n 9 Kurt Ahrens Jr.   West Germany   1966–1969          0                       \n10 Jack Aitken       United Kingdom 2020               0                       \n# ℹ 859 more rows\n# ℹ 7 more variables: `Race entries` <chr>, `Race starts` <chr>,\n#   `Pole positions` <chr>, `Race wins` <chr>, Podiums <chr>,\n#   `Fastest laps` <chr>, `Points[a]` <chr>\n```\n\n\n:::\n:::\n\n\n:::\n\n\n## CSS \n\n::: ws\n\n- CSS (Cascading Style Sheets) is a language that describes how HTML elements should be displayed. \n\n- CSS selectors:\n\n  * shortcuts for selecting HTML elements to style  \n  * can also be used to extract the content of these elements\n\n:::\n\n## SelectorGadget\n\nSelectorGadget is a point-and-click CSS selector, specifically for [Chrome]{.bold-red},  and it comes as a [Chrome Extension](https://chrome.google.com/webstore/detail/selectorgadget/mhjhnkcfbdhnjickkkdbjoemdmbfginb) (Click to install!)\n\n\n![](images/best-picture-2023.png)\n\n[Click [here](https://www.w3schools.com/cssref/css_selectors.asp) for a list of selectors]{.footer}\n\n\n\n## SelectorGadget\n\n\n\n[Select all elements that are related to that object. Next, de-select anything in yellow you do not want]{.green-h}\n\n<center>\n<img src=\"images/selector.gif\"  width=\"650\" height=\"500\" class=\"center\">\n</center>\n\n\n## Read HTML into R\n\n::: hscroll\n::: cle\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n{html_document}\n<html data-version=\"klecko-\" data-root=\"/home/pfr/build\" lang=\"en\" class=\"no-js\">\n[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] <body class=\"pfr\">\\n<div id=\"wrap\">\\n  \\n  <div id=\"header\" role=\"banner\" ...\n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n[Click [here](https://www.pro-football-reference.com/teams/min/2023.htm) to go to webpage]{.footer}\n\n\n## Scrapped Table\n\n::: panel-tabset\n\n### Code\n::: font90\n\n\n::: {.cell}\n\n:::\n\n\n:::\n\n### Data\n\n::: hscroll\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nTable: Scrapped data for various team stats\n\n|player          |  pf|  yds|  ply| y_p| to| fl| x1st_d| cmp| att| yds_2| td| int| ny_a| x1st_d_2| att_2| yds_3| td_2|  y_a| x1st_d_3| pen| yds_4| x1st_py| number_dr| sc_percent| to_percent|start    |time | plays| yds_5|   pts|\n|:---------------|---:|----:|----:|---:|--:|--:|------:|---:|---:|-----:|--:|---:|----:|--------:|-----:|-----:|----:|----:|--------:|---:|-----:|-------:|---------:|----------:|----------:|:--------|:----|-----:|-----:|-----:|\n|Team Stats      | 344| 5912| 1071| 5.5| 34| 15|    340| 424| 631|  4359| 30|  19|  6.4|      220|   393|  1553|    7|  4.0|       79|  89|   670|      41|       179|       34.1|       18.4|Own 26.6 |2:47 |  6.15|  32.9|  1.85|\n|Opp. Stats      | 362| 5664| 1095| 5.2| 22| 11|    328| 426| 606|  3986| 23|  11|  6.1|      208|   446|  1678|   14|  3.8|      104| 111|   916|      16|       186|       37.1|       11.3|Own 30.1 |2:51 |  6.10|  30.5|  1.91|\n|Lg Rank Offense |  22|   10|   NA|  NA| 31| 30|     10|  NA|   4|     5|  4|  29| 10.0|       NA|    28|    29|   30| 24.0|       NA|  NA|    NA|      NA|        NA|       22.0|        1.0|29       |13   |  9.00|  10.0| 18.00|\n|Lg Rank Defense |  13|   16|   NA|  NA| 19|  8|     16|  NA|  26|    24| 17|  19| 15.0|       NA|    13|     8|   11|  4.0|       NA|  NA|    NA|      NA|        NA|       13.0|       19.0|28       |26   | 24.00|  18.0| 18.00|\n\n\n:::\n:::\n\n\n:::\n\n:::\n\n::: centered-content\n\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 1</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please clone the `ca16-yourusername` repository from  [Github](https://github.com/DataScienceSpring24)\n- Please do the problem 1 in the class activity for today\n:::\n:::\n:::\n\n`<div class=\"countdown\" id=\"timer_7ca6d421\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"Day16_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"Day16_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}