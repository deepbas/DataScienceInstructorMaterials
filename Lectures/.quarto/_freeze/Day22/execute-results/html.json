{
  "hash": "ed99bc9b62fd1849c06322aed110c3fa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Model Accuracy and Evaluation\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"STAT 220\"\nauthor: \"Bastola\"\nformat:\n  revealjs: \n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: true\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\nfilters:\n  - shinylive\n  - webr\n---\n\n\n\n\n\n\n\n::: middle-align-xy\n\n## Recap: KNN (K- Nearest Neighbor)\n\n::: vvt\n\n- Supervised machine learning algorithm i.e., it requires labeled data for training\n\n- Need to tell the algorithm the exact number of neighbors (K) we want to consider\n\n:::\n:::\n\n\n::: middle-align-xy\n\n## Training and Testing\n\n::: cle\n\nTraining: Fitting a model with certain hyper-parameters on a particular subset of the dataset\n\nTesting: Test the model on a different subset of the dataset to get an estimate of a final, unbiased assessment of the model's performance\n\n:::\n:::\n\n## Workflows\n\n::: row\n::: left\n\n![](images/workflow.png)\n\n:::\n\n::: right\n\n<br>\n<br>\n\nA machine learning workflow (the “black box”) containing model specification and preprocessing recipe/formula\n\n:::\n:::\n\n## Forest Fire : Data Description \n\n::: font60\n\nVariable | Description\n-------- | -------------\n`Date` | (DD-MM-YYYY) Day, month, year \n`Temp` | Noon temperature in Celsius degrees: 22 to 42\n`RH` | Relative Humidity in percentage: 21 to 90\n`Ws` | Wind speed in km/h: 6 to 29\n`Rain` | Daily total rain in mm: 0 to 16.8\n`Fine Fuel Moisture Code (FFMC) index` | 28.6 to 92.5\n`Duff Moisture Code (DMC) index` | 1.1 to 65.9\n`Drought Code (DC) index` | 7 to 220.4\n`Initial Spread Index (ISI) index` | 0 to 18.5\n`Buildup Index (BUI) index` | 1.1 to 68\n`Fire Weather Index (FWI) index` | 0 to 31.1\n`Classes` | Two classes, namely fire and not fire\n\n:::\n\n\n\n## 1. Create a workflow: Split raw data\n\n::: eqt\n::: font80\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: row\n:::  left\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 182 × 3\n   temperature   isi classes \n         <dbl> <dbl> <chr>   \n 1          38   4.1 fire    \n 2          34  14.3 fire    \n 3          33   6.7 fire    \n 4          30   1   not fire\n 5          35   7.5 fire    \n 6          34   7.3 fire    \n 7          33   2.8 fire    \n 8          31   2.5 not fire\n 9          34   3   not fire\n10          33  14.2 fire    \n# ℹ 172 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 61 × 3\n   temperature   isi classes \n         <dbl> <dbl> <chr>   \n 1          29   1   not fire\n 2          26   0.3 not fire\n 3          26   4.8 fire    \n 4          28   0.4 not fire\n 5          31   0.7 not fire\n 6          31   2.5 not fire\n 7          34   9.2 fire    \n 8          32   7.6 fire    \n 9          32   2.2 not fire\n10          29   1.1 not fire\n# ℹ 51 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n:::\n:::\n\n\n\n##\n\n2. Make a recipe\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n3. Specify the model\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n4. Define the workflow object\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n\n\n## 5. Fit the model\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nFitted workflow\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: nearest_neighbor()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n2 Recipe Steps\n\n• step_scale()\n• step_center()\n\n── Model ───────────────────────────────────────────────────────────────────────\n\nCall:\nkknn::train.kknn(formula = ..y ~ ., data = data, ks = min_rows(5,     data, 5), kernel = ~\"rectangular\")\n\nType of response variable: nominal\nMinimal misclassification: 0.03296703\nBest kernel: rectangular\nBest k: 5\n```\n\n\n:::\n:::\n\n\n\n\n\n::: middle-align-xy\n\n## 6. Evaluate the model on test dataset\n\n::: eqt\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n:::\n\n## 7. Compare the known labels and predicted labels\n\n::: scroll-box-20\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|classes  |predicted |\n|:--------|:---------|\n|not fire |not fire  |\n|not fire |not fire  |\n|fire     |fire      |\n|not fire |not fire  |\n|not fire |not fire  |\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: centered-content\n\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 1</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please clone the `ca22-yourusername` repository from  [Github](https://github.com/DataScienceSpring24)\n- Please do problem 1 in the class activity for today\n:::\n:::\n:::\n\n`<div class=\"countdown\" id=\"timer_3c103eed\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n:::\n\n\n## \n\nHow to choose the number of neighbors in a principled way?\n\n::: panel-tabset\n\n### Visualizing boundary\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/scale-fill-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n\n### Code\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n### Take Away\n\n::: inverse\n\n- We normally don't have a clear separation between classes and usually have more than 2 features.\n\n- Eyeballing on a plot to discern the classes is not very helpful in the practical sense\n\n:::\n\n:::\n\n\n\n\n## Evaluating accuracy\n\n::: cle\n\nWe want to evaluate classifiers based on some accuracy metrics.\n\n\n- Randomly split data set into two pieces: training set and test set\n\n- Train (i.e. fit) KNN on the training set\n\n- Make predictions on the test set\n\n- See how good those predictions are\n\n:::\n\n## [Train (left) and test (right) dataset (50-50)]{.font80}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n::: row\n::: left\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n\n##\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n\n\n##\n\n<center>\n  <img src=\"images/confusion_matrix.png\" style=\"width: 60%;\" alt=\"Confusion Matrix\">\n</center>\n\n\n<div style=\"position: absolute; top: 70%; left: 10%;\">\n<span style=\"content: '\\2192'; font-size: 34px; color: #DD00A; text-align: center; white-space: pre-line;\">\n  <p>Confusion matrix: tabulation of true (i.e. expected) and predicted class labels</p>\n</span>\n</div>\n\n\n\n## Performance metrics\n\n::: cle\n::: font60\n::: row\n::: left\n\nCommon metrics include:\n\n- accuracy\n- sensitivity\n- specificity\n- positive predictive value (PPV)\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n:::\n:::\n:::\n:::\n\n## Accuracy\n\n::: cle\n::: font90\n\nProportion of correctly classified cases\n$${\\rm Accuracy} = \\frac{\\text{true positives} + \\text{true negatives}}{n}$$\n\n\n::: row\n::: left\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n          Truth\nPrediction fire not fire\n  fire       61        2\n  not fire    6       53\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  <chr>    <chr>          <dbl>\n1 accuracy binary         0.934\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n:::\n:::\n\n## Sensitivity\n\n::: cle\n\nProportion of positive cases that are predicted to be positive\n$${\\rm Sensitivity} = \\frac{\\text{true positives}}{ \\text{true positives}+ \\text{false negatives}}$$\nAlso called... true positive rate or recall\n\n\n::: row\n::: left\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n          Truth\nPrediction fire not fire\n  fire       61        2\n  not fire    6       53\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 sens    binary         0.910\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n:::\n\n\n## Specificity\n\n::: cle\n\nProportion of negative cases that are predicted to be negative\n$${\\rm Specificity} = \\frac{\\text{true negatives}}{ \\text{false positives}+ \\text{true negatives}}$$\nAlso called... true negative rate\n\n::: row\n::: left\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n          Truth\nPrediction fire not fire\n  fire       61        2\n  not fire    6       53\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 spec    binary         0.964\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n:::\n\n## Positive predictive value (PPV)\n\n::: cle\n::: font90\n\nProportion of cases that are predicted to be positives that are truly positives\n$${\\rm PPV} = \\frac{\\text{true positives}}{ \\text{true positives} + \\text{false positives}}$$\nAlso called... precision\n\n::: row\n::: left\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n          Truth\nPrediction fire not fire\n  fire       61        2\n  not fire    6       53\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 ppv     binary         0.968\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n:::\n:::\n\n\n\n::: centered-content\n\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 2</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please finish the remaining problems in the class activity for today\n\n:::\n:::\n:::\n\n`<div class=\"countdown\" id=\"timer_5a6f6b2f\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n:::\n\n\n::: middle-align-xy\n\n## Tabulate the metrics !!\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  .metric  .estimator .estimate\n  <chr>    <chr>          <dbl>\n1 accuracy binary         0.934\n2 sens     binary         0.910\n3 spec     binary         0.964\n4 ppv      binary         0.968\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n\n## Choose the optimal K based on majority of the metrics!\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/unnamed-chunk-31-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n\n\n## [Receiver Operating Characteristic (ROC) curve]{.font70}\n\n::: panel-tabset\n\n### ROC curve\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Day22_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n\n### Code\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n",
    "supporting": [
      "Day22_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"Day22_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"Day22_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}