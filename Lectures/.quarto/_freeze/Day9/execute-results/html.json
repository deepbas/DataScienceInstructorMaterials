{
  "hash": "5343a8fb1ced6172cf01a705f918face",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Imports\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"STAT 220\"\nauthor: \"Bastola\"\nformat:\n  revealjs: \n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: true\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Let's start with a messy data!\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|First Name |Last initials | % in| ñ$$$|   | hi |null |\n|:----------|:-------------|----:|----:|--:|:---|:----|\n|Yi         |C             |  0.1|    1|  3|a   |NA   |\n|Do         |R             |  0.5|    2|  2|b   |NA   |\n|NA         |              |   NA|   NA|  1|NA  |NULL |\n\n\n:::\n:::\n\n\n\n## Clean messy column names \n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|first_name |last_initials | percent_in|  n|  x|hi |null |\n|:----------|:-------------|----------:|--:|--:|:--|:----|\n|Yi         |C             |        0.1|  1|  3|a  |NA   |\n|Do         |R             |        0.5|  2|  2|b  |NA   |\n|NA         |              |         NA| NA|  1|NA |NULL |\n\n\n:::\n:::\n\n\n\n\n::: middle-align-xy\n\n## `tidyr::drop_na()`\n\nRemove *all* rows with **any missing data**. [May not be useful!]{.bold-text}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|first_name |last_initials | percent_in|  n|  x|hi |null |\n|:----------|:-------------|----------:|--:|--:|:--|:----|\n\n\n:::\n:::\n\n\n\n:::\n\n::: middle-align-xy\n\n## `tidyr::drop_na(col)`\n\nRemove rows with `NA` in **selected columns**\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|first_name |last_initials | percent_in|  n|  x|hi |null |\n|:----------|:-------------|----------:|--:|--:|:--|:----|\n|Yi         |C             |        0.1|  1|  3|a  |NA   |\n|Do         |R             |        0.5|  2|  2|b  |NA   |\n\n\n:::\n:::\n\n\n\n:::\n\n## Convert any empty or null strings to NA with `na_if()`\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|first_name |last_initials | percent_in|  n|  x|hi |null |\n|:----------|:-------------|----------:|--:|--:|:--|:----|\n|Yi         |C             |        0.1|  1|  3|a  |NA   |\n|Do         |R             |        0.5|  2|  2|b  |NA   |\n|NA         |NA            |         NA| NA|  1|NA |NA   |\n\n\n:::\n:::\n\n\n\n\n\n## [Handling Missing Data with `replace_na()`and `remove_empty()`]{.font70}\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|first_name |last_initials | percent_in|   n|  x|hi |\n|:----------|:-------------|----------:|---:|--:|:--|\n|Yi         |C             |        0.1| 1.0|  3|a  |\n|Do         |R             |        0.5| 2.0|  2|b  |\n|Unknown    |Unknown       |        0.3| 1.5|  1|c  |\n\n\n:::\n:::\n\n\n\n\n\n\n## Working Directories\n\n::: cle\n\nThe working directory is where R looks for files and saves files by default.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd() # see working directory\nsetwd() # change your working directory\n```\n:::\n\n\n\nTo set working directory to your **STAT 220** course folder\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n\n::: middle-align-xy\n\n## Useful Terminal Commands:\n\n::: ws\n\n```r\n$ cd   # change directory\n$ ls   # unix command to list files\n$ pwd  # present working directory\n$ grep  # search for patterns in files\n$ mkdir # create a new directory\n$ mv # move or rename files or directories\n```\n\n:::\n:::\n\n\n::: middle-align-xy\n\n## Web imports\n\n::: mre\n\nTo your working environment:\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nTo download file to working folder:\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n:::\n\n\n\n\n## `readr` package\n\n\n::: fsp\n\n- `readr` is a part of **tidyverse** library \n- Includes functions for reading data stored in text file spreadsheets\ninto R.\n- Functions in the package include `read_csv()`, `read_tsv()`, `read_delim()` and more.\n- These differ by the delimiter they use to split columns.\n\n:::\n\n::: footer\n[`readr` cheat sheet](https://rstudio.github.io/cheatsheets/data-import.pdf)\n:::\n\n## Reading and Writing Files: \n\n::: ws\n\nAll `readr` functions share a common syntax\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n- Generate tibbles rather than  data frames\n\n:::\n\n\n\n## `readr` functions\n\n\nfunction  | reads\n:---------|:----------------------\nread_csv()   | Comma separated values\nread_csv2()  | Semi-colon separated values\nread_delim() | General delimited files\nread_fwf()   | Fixed width files\nread_log()   | Apache log files\nread_table() | Space separated\nread_tsv()   | Tab delimited values\n\n\n::: centered-content\n\n## Data frames and tibbles Conversion\n\n::: eqt\n\n<img src=\"images/09-tibble.png\" width=\"50%\" height=\"45%\">\n\n- `as_tibble()` - convert a data frame to a tibble\n- `as.data.frame()` - convert a tibble to a data frame\n\n:::\n:::\n\n::: centered-content\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 1</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please clone the `ca9-yourusername` repository from  [Github](https://github.com/DataScienceSpring24)\n- Please do the problem 1 in the class activity for today\n:::\n:::\n:::\n\npreservec85ec361ac9f157d\n:::\n\n\n\n\n## Did it work as expected?\n\n::: ws\n::: font90\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 549\nColumns: 16\n$ series                <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ episode               <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, …\n$ baker                 <chr> \"Annetha\", \"David\", \"Edd\", \"Jasminder\", \"Jonatha…\n$ technical             <chr> \"2nd\", \"3rd\", \"1st\", \"N/A\", \"9th\", \"N/A\", \"8th\",…\n$ result                <chr> \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", \"IN\", …\n$ uk_airdate            <chr> \"17 August 2010\", \"17 August 2010\", \"17 August 2…\n$ us_season             <int> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ us_airdate            <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ showstopper_chocolate <chr> \"chocolate\", \"chocolate\", \"no chocolate\", \"no ch…\n$ showstopper_dessert   <chr> \"other\", \"other\", \"other\", \"other\", \"other\", \"ca…\n$ showstopper_fruit     <chr> \"no fruit\", \"no fruit\", \"no fruit\", \"no fruit\", …\n$ showstopper_nut       <chr> \"no nut\", \"no nut\", \"no nut\", \"no nut\", \"almond\"…\n$ signature_chocolate   <chr> \"no chocolate\", \"chocolate\", \"no chocolate\", \"no…\n$ signature_dessert     <chr> \"cake\", \"cake\", \"cake\", \"cake\", \"cake\", \"cake\", …\n$ signature_fruit       <chr> \"no fruit\", \"fruit\", \"fruit\", \"fruit\", \"fruit\", …\n$ signature_nut         <chr> \"no nut\", \"no nut\", \"no nut\", \"no nut\", \"no nut\"…\n```\n\n\n:::\n:::\n\n\n\nWe want `technical` to be numerical and `uk_airdate` to be date\n\n:::\n:::\n\n\n::: middle-align-xy\n\n## The `col_types` argument\n\n::: fsp\nBy default, looks at first 1000 rows to guess variable data types (`guess_max`)\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n:::\n\n\n\n## Looking for `problems`\n\n::: cle\nList of potential problems parsing the file\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 556 × 5\n     row   col expected        actual         file \n   <int> <int> <chr>           <chr>          <chr>\n 1     2     6 date in ISO8601 17 August 2010 \"\"   \n 2     3     6 date in ISO8601 17 August 2010 \"\"   \n 3     4     6 date in ISO8601 17 August 2010 \"\"   \n 4     5     4 a number        N/A            \"\"   \n 5     5     6 date in ISO8601 17 August 2010 \"\"   \n 6     6     6 date in ISO8601 17 August 2010 \"\"   \n 7     7     4 a number        N/A            \"\"   \n 8     7     6 date in ISO8601 17 August 2010 \"\"   \n 9     8     6 date in ISO8601 17 August 2010 \"\"   \n10     9     4 a number        N/A            \"\"   \n# ℹ 546 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Date formatting \n\n::: cle\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 556 × 5\n    row   col expected        actual         file \n  <int> <int> <chr>           <chr>          <chr>\n1     2     6 date in ISO8601 17 August 2010 \"\"   \n2     3     6 date in ISO8601 17 August 2010 \"\"   \n3     4     6 date in ISO8601 17 August 2010 \"\"   \n4     5     4 a number        N/A            \"\"   \n5     5     6 date in ISO8601 17 August 2010 \"\"   \n# ℹ 551 more rows\n```\n\n\n:::\n:::\n\n\n\n\nISO8601 format: `2021-10-04`\n\nWhat we have: `17 August 2010`\n\n:::\n\n\n## Adding `format` instructions\n\n::: cle\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n- Year: `\"%Y\"` (4 digits). `\"%y\"` (2 digits)\n- Month: `\"%m\"` (2 digits), `\"%b\"` (abbreviated name in current locale), `\"%B\"` (full name in current locale).\n- Day: `\"%d\"` (2 digits), `\"%e\"` (optional leading space)\n\n:::\n\n\n## Looking for more `problems`\n\n::: cle\n\nList of potential problems parsing the file\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 5\n    row   col expected actual file \n  <int> <int> <chr>    <chr>  <chr>\n1     5     4 a number N/A    \"\"   \n2     7     4 a number N/A    \"\"   \n3     9     4 a number N/A    \"\"   \n4    11     4 a number N/A    \"\"   \n5    35     4 a number N/A    \"\"   \n6    36     4 a number N/A    \"\"   \n7    37     4 a number N/A    \"\"   \n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n\n## Addressing missing values\n\n::: cle\n\nBy default `na = c(\"\", \"NA\")` are the recognized missing values\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n\n::: middle-align-xy\n\n## No more `problems`\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 5\n# ℹ 5 variables: row <int>, col <int>, expected <chr>, actual <chr>, file <chr>\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n\n## The Dataset\n\n::: dse\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 549 × 16\n   series episode baker     technical result uk_airdate us_season us_airdate\n    <dbl>   <dbl> <chr>         <dbl> <chr>  <date>         <dbl> <date>    \n 1      1       1 Annetha           2 IN     2010-08-17        NA NA        \n 2      1       1 David             3 IN     2010-08-17        NA NA        \n 3      1       1 Edd               1 IN     2010-08-17        NA NA        \n 4      1       1 Jasminder        NA IN     2010-08-17        NA NA        \n 5      1       1 Jonathan          9 IN     2010-08-17        NA NA        \n 6      1       1 Louise           NA IN     2010-08-17        NA NA        \n 7      1       1 Miranda           8 IN     2010-08-17        NA NA        \n 8      1       1 Ruth             NA IN     2010-08-17        NA NA        \n 9      1       1 Lea              10 OUT    2010-08-17        NA NA        \n10      1       1 Mark             NA OUT    2010-08-17        NA NA        \n# ℹ 539 more rows\n# ℹ 8 more variables: showstopper_chocolate <chr>, showstopper_dessert <chr>,\n#   showstopper_fruit <chr>, showstopper_nut <chr>, signature_chocolate <chr>,\n#   signature_dessert <chr>, signature_fruit <chr>, signature_nut <chr>\n```\n\n\n:::\n:::\n\n\n:::\n\n\n## Column casting functions\n\n\nType  | **dplyr::glimpse()**  | [readr::col_*()]{.bold}\n-----|----------|------------\nlogical   | `<lgl>`            | `col_logical`\nnumeric   | `<int>` or `<dbl>` | `col_number`\ncharacter | `<chr>`            | `col_character`\nfactor    | `<fct>`            | `col_factor`\ndate      | `<date>`           | `col_date`\n\n\n\n## `?read_csv`\n\n::: fsp\n::: font120\n\n\n::: {.cell}\n\n:::\n\n\n:::\n::: \n\n::: centered-content\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 2</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please do the remaining problems in the class activity.\n- Submit to Gradescope on [moodle](https://moodle.carleton.edu/course/view.php?id=43692) when done!\n:::\n:::\n:::\n\npreserve5af74ce9443df1b3\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"Day9_files/libs/countdown/countdown.css\" rel=\"stylesheet\" />\n<script src=\"Day9_files/libs/countdown/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {
      "preserve5af74ce9443df1b3": "<div class=\"countdown\" id=\"timer_151ba190\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>",
      "preservec85ec361ac9f157d": "<div class=\"countdown\" id=\"timer_5b550440\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>"
    },
    "postProcess": true
  }
}