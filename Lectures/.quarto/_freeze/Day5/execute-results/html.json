{
  "hash": "570ec4a97493ab58764125a2a8598921",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Advanced Data Visualization Tools\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"STAT 220\"\nauthor: \"Bastola\"\nformat:\n  revealjs: \n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: true\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n\n## Changing scales and colors\n\n::: font70\n::: green-h\nFunctions that control the mapping of your data to aesthetic attributes like color, fill, and shape.\n\n\n\n::: {.cell}\n\n:::\n\n\n:::\n:::\n\n\n::: eqt\n::: font60\nSome common scale functions:\n\n- `scale_fill_manual()` : Manually define the fill colors for different categories\n- `scale_fill_brewer()` : Use color palettes from the `ColorBrewer` library\n- `scale_color_viridis()` : Use the viridis color scale for continuous data.\n- `scale_shape_manual()` : Manually define the shapes for different categories.\n- `scale_x_log10()`: Transform the x-axis to a logarithmic scale.\n- `scale_y_reverse()`: Reverse the direction of the y-axis.\n- `scale_color_gradient()`: Define a custom color gradient for continuous data.\n- `scale_fill_discrete()`: Use a predefined color palette for discrete data.\n\n:::\n:::\n\n\n\n::: middle-align-xy\n\n## Recommended reading:\n\n- [Using colors in R](http://stat545.com/block018_colors.html)\n\n- [Dealing with colors in ggplot2](https://r-graph-gallery.com/ggplot2-color.html)\n\n- [Taking control of qualitative colors in ggplot2](http://stat545.com/block019_enforce-color-scheme.html)\n\n- [Data journalism](https://datajournalism.com/read/)\n\n- [R Color Brewer](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3)\n\n:::\n\n## Example\n\nLet's make Lake #1 `steelblue` and Lake #2 `maroon`\n\n::: panel-tabset\n\n### Plot\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/scale-fill1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n### Code\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n:::\n\n\n## Changing themes\n\n::: row\n::: left\n\n\n::: mre\n**Theme:** The non-data ink on your plots\n\nExamples:\n\n- background color\n- tick marks\n- grid lines\n- legend position \n- legend appearance\n\n:::\n:::\n\n::: right\n\n<br>\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Top to bottom: solarized, bw, and dark themes resp.](Day5_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=90%}\n:::\n:::\n\n\n\n:::\n:::\n\n::: footer\nClick for various basic [ggplot2 themes](https://ggplot2.tidyverse.org/reference/ggtheme.html)  and for [ggthemes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/)\n:::\n\n\n## Annotations\n\n::: panel-tabset\n\n### Plot\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/annotate1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n### Code\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n:::\n\n\n## Changing coordinates\n\n\n::: cle\n::: font60\n\nBy default, `ggplot2` uses a Cartesian coordinate system, but there are others available!\n\n- `coord_cartesian`: Adjusts the x and y axis limits without modifying the data.\n- `coord_equal`: Ensures equal scaling for the x and y axes.\n- `coord_fixed`: Sets a fixed aspect ratio for the plot.\n- `coord_flip`: Flips the x and y axes.\n- `coord_map`: Projects the plot onto a map projection. \n- `coord_polar`: Transforms the plot to a polar coordinate system.\n- `coord_quickmap`: Provides an approximation for a map projection.\n- `coord_sf`: Designed for use with sf objects (spatial data).\n- `coord_trans`: Transforms the plot's x and y axes using specified transformations.  \n\n:::\n:::\n\n\n\n## Polar Coordinates\n\n\n::: panel-tabset\n\n### Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n\n### Code\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n\n\n## **ggplot2** maps\n\n::: bql\n::: font80\n\nThe `ggplot2` package contains latitude and longitude to define geographic boundaries\n\n- some regions: `state`, `usa`, `world`, `county`\n- see `?map_data` or `?maps` for more regions (may need to install `maps`)\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 15,537\nColumns: 6\n$ long      <dbl> -87.46201, -87.48493, -87.52503, -87.53076, -87.57087, -87.5…\n$ lat       <dbl> 30.38968, 30.37249, 30.37249, 30.33239, 30.32665, 30.32665, …\n$ group     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ order     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ region    <chr> \"alabama\", \"alabama\", \"alabama\", \"alabama\", \"alabama\", \"alab…\n$ subregion <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## What is a map?\n\nA set of latitude longitude points...\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n\n\n## What is a map?\n\n... that are connected with lines in a very specific order.\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n\n\n\n::: middle-align-xy\n\n## Necessary map data\n\n::: bq\n\n- latitude/longitude points for all map boundaries\n- which boundary group all lat/long points belong \n- the order to connect points within each group\n:::\n\n:::\n\n\n## Adding state-level information\n\n::: eqt\n-  Add other geographic information by adding geometric layers to the plot\n-  Add non-geographic information by altering the fill color for each state\n\n  + Use `geom = \"polygon\"` to treat states as solid shapes to add color\n  + Incorporate numeric information using color shade or intensity\n  + Incorporate categorical information using color hue\n\n:::\n\n\n## Maps using *geom_polygon*\n\n::: green-h\n`geom_polygon` connects the dots between lat (`y`) and long (`x`) points in a given `group`.  It connects start and end points which allows you to `fill` a closed polygon shape\n:::\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n::: middle-align-xy\n\n## Application: Covid mapping\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 51\nColumns: 7\n$ State                                  <chr> \"Alabama\", \"Alaska\", \"Arizona\",…\n$ `7-day avg. cases`                     <int> 0, 0, 0, 0, 128, 0, 0, 13, 0, 0…\n$ `7-day avg. deaths`                    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Cases                                  <chr> \"1,659,936\", \"287,319\", \"2,486,…\n$ Deaths                                 <chr> \"21,138\", \"1,457\", \"29,852\", \"1…\n$ `7-day avg. hospitalizations`          <int> 30, 4, 152, 30, 377, 92, 20, 83…\n$ `7-day avg. hospitalizations per 100k` <dbl> 0.6, 0.6, 2.0, 1.0, 1.0, 1.0, 0…\n```\n\n\n:::\n:::\n\n\n\n::: footer\nSource: https://usafacts.org/visualizations/coronavirus-covid-19-spread-map/\n:::\n\n\n:::\n\n\n\n## Application: Combining datasets\n\nWe need to add the covid info to the state polygon data set\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15,537 × 12\n   long   lat group order region  subregion x7_day_avg_cases x7_day_avg_deaths\n  <dbl> <dbl> <dbl> <int> <chr>   <chr>                <int>             <int>\n1 -87.5  30.4     1     1 alabama <NA>                     0                 0\n2 -87.5  30.4     1     2 alabama <NA>                     0                 0\n3 -87.5  30.4     1     3 alabama <NA>                     0                 0\n4 -87.5  30.3     1     4 alabama <NA>                     0                 0\n5 -87.6  30.3     1     5 alabama <NA>                     0                 0\n# ℹ 15,532 more rows\n# ℹ 4 more variables: cases <dbl>, deaths <dbl>,\n#   x7_day_avg_hospitalizations <int>,\n#   x7_day_avg_hospitalizations_per_100k <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n## COVID Cases \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n\n\n\n## Adjusting the coordinate system \n\n::: panel-tabset\n\n### Plot\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/better-plot1-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n### Code\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n\n## Adjusting the color: alternate way\n\n::: panel-tabset\n\n### Plot\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/better-plot3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n### Code\n\n\n\n::: {.cell}\n\n:::\n\n\n\n:::\n\n## Cloropleth maps\n\n::: green-h\n::: font70\nUses color or shading of sub regions to visual data. Displays divided geographical areas or regions that are colored in relation to a numeric variable.\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 49\nColumns: 8\n$ X              <int> 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18,…\n$ region         <chr> \"alabama\", \"arizona\", \"arkansas\", \"california\", \"colora…\n$ PopSize        <int> 4841164, 6728577, 2968472, 38654206, 5359295, 3588570, …\n$ MedianAge      <dbl> 38.6, 37.1, 37.7, 36.0, 36.4, 40.6, 39.6, 33.8, 41.6, 3…\n$ PercentFemale  <dbl> 51.5, 50.3, 50.9, 50.3, 49.8, 51.2, 51.6, 52.6, 51.1, 5…\n$ BornInState    <int> 3387845, 2623391, 1823628, 21194542, 2294446, 1981427, …\n$ MedianIncome   <int> 23527, 26565, 22787, 27772, 31325, 34124, 30648, 41160,…\n$ PercentInState <dbl> 69.98, 38.99, 61.43, 54.83, 42.81, 55.21, 45.49, 36.72,…\n```\n\n\n:::\n:::\n\n\n\n\n\n## Cloropleth maps using [geom_map]{.bold-text}\n\nDon't need to merge `ACS` and `states` data! \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day5_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n\n\n\n\n\n::: centered-content\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 1</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n::: lqt\n- Please clone the `ca5-yourusername` repository from  [Github](https://github.com/DataScienceSpring24)\n- Please do the problems on the class activity for today\n- Submit to Gradescope on [moodle](https://moodle.carleton.edu/course/view.php?id=43692) when done!\n:::\n:::\n:::\n\npreservea4c4cc75d6d9b5dd\n:::\n",
    "supporting": [
      "Day5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"Day5_files/libs/countdown/countdown.css\" rel=\"stylesheet\" />\n<script src=\"Day5_files/libs/countdown/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {
      "preservea4c4cc75d6d9b5dd": "<div class=\"countdown\" id=\"timer_26bd9fd8\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">30</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>"
    },
    "postProcess": true
  }
}