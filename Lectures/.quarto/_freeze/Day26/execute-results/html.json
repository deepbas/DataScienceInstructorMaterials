{
  "hash": "458417fdd664ad31b6fd0e56a06f9836",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Intro to Clustering\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"STAT 220\"\nauthor: \"Bastola\"\nformat:\n  revealjs: \n    theme: [default, scss/main.scss]\n    slide_level: 2\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: true\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\nfilters:\n  - shinylive\n  - webr\n---\n\n\n\n\n\n\n\n## Supervised learning\n\n::: eqt\n\n<center>\n<img src=\"images/supervised.png\" width=\"60%\" height=\"60%\"> <br>\n</center>\n\n\n- train or \"supervise\" algorithms to use labels to classify data or predict outcomes\n\n- use labeled inputs and outputs to measure model accuracy  \n\n:::\n\n[Image source: click [here](https://www.javatpoint.com/supervised-machine-learning)]{.footer}\n\n\n\n## Unsupervised learning\n\n::: eqt\n::: font80\n\n<center>\n<img src=\"images/unsupervised.jpg\" width=\"70%\" height=\"70%\"> <br>\n</center>\n\n\n\n- uses statistical learning algorithms to analyze and cluster unlabeled data sets \n\n- discover hidden patterns in data without human intervention, so \"unsupervised\"\n\n  - group unlabeled data based on their similarities or differences\n\n:::\n:::\n\n[Image source: click [here](https://www.geeksforgeeks.org/clustering-in-machine-learning/)]{.footer}\n\n\n## [Example: get cluster association from unlabeled data]{.font70}\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: row\n::: left\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n\n::: right\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 10%;\">\n<span style=\"content: '\\2192'; font-size: 40px; color: #FF00FF; text-align: center; white-space: pre-line;\">\n  <p style=\"font-family: 'Comic Sans MS', cursive, sans-serif; font-weight: bold;\">No labels!</p>\n</span>\n</div>\n\n\n\n<div style=\"position: absolute; top: 5%; left: 60%;\">\n<span style=\"content: '\\2192'; font-size: 40px; color: #FF00FF; text-align: center; white-space: pre-line;\">\n  <p style=\"font-family: 'Comic Sans MS', cursive, sans-serif; font-weight: bold;\">Labels!!</p>\n</span>\n</div>\n\n[Can use an unsupervised algorithm called k-means to achieve this!]{.bold-red}\n\n\n\n\n## K-means Basics\n\n<br>\n\n::: cle\n\n- Algorithm to group data into K clusters\n\n- Starts with an initial clustering of data\n\n- Iteratively improves the cluster assignments \n\n- Stops until the assignments cannot be improved further\n\n:::\n\n\n\n## Algorithm\n\n<br>\n\n::: cle\n\n1. Randomly assign a number, from 1 to K, to each of the observations\n\n2. Compute the centroid of each of the K clusters\n\n3. Assign each point to the nearest centroid and redefine the cluster\n\n4. Repeat steps 2 and 3 until no point change clusters\n\n:::\n\n\n\n## {auto-animate=\"true\"}\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (1) Randomly assign a number, from 1 to <em>K</em>, to each of the observations\n  </span>\n</div>\n\n## {auto-animate=\"true\"}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (2) Compute the centroid of each cluster\n  </span>\n</div>\n\n\n## {auto-animate=\"true\"}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (3) Re-assign each observation to the cluster whose centroid is closest\n  </span>\n</div>\n\n## {auto-animate=\"true\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (4) Re-compute the centroid of each cluster\n  </span>\n</div>\n\n\n## {auto-animate=\"true\"}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (5) Re-assign each observation to the cluster whose centroid is closest\n  </span>\n</div>\n\n## {auto-animate=\"true\"}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (6) Re-compute the centroid of each cluster\n  </span>\n</div>\n\n## {auto-animate=\"true\"}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (7) Re-assign each observation to the cluster whose centroid is closest\n  </span>\n</div>\n\n## {auto-animate=\"true\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (8) Re-compute the centroid of each cluster\n  </span>\n</div>\n\n## {auto-animate=\"true\"}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (9) Re-assign each observation to the cluster whose centroid is closest\n  </span>\n</div>\n\n## {auto-animate=\"true\"}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=600}\n:::\n:::\n\n\n\n<div style=\"position: absolute; top: 5%; left: 5%;\">\n  <span style=\"font-size: 30px; color: red; font-weight: bold; text-align: center; white-space: pre-line;\">\n    (10) Re-compute the centroid of each cluster\n  </span>\n</div>\n\n## Main Idea\n\n::: cle\n::: font70\n\n[To minimize the total within cluster variation]{.green-h}\n\nThe total within-cluster variation is the sum of squared Euclidean distances between items and the corresponding centroid:\n\n$$WSS = \\sum_{k=1}^K WSS(C_k) = \\sum_{k=1}^K \\sum_{x_i \\in C_k}(x_i - \\mu_k)^2$$\nwhere:\n\n- WSS is the Within Cluster Sum of Squared Errors \n- $x_i$ is a data point in the cluster $C_k$\n- $\\mu_k$ is the mean value of the points assigned to the cluster $C_k$\n\n:::\n:::\n\n\n## `USArrests`\n\n::: scroll-container\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|               | Murder| UrbanPop|\n|:--------------|------:|--------:|\n|Alabama        |   13.2|       58|\n|Alaska         |   10.0|       48|\n|Arizona        |    8.1|       80|\n|Arkansas       |    8.8|       50|\n|California     |    9.0|       91|\n|Colorado       |    7.9|       78|\n|Connecticut    |    3.3|       77|\n|Delaware       |    5.9|       72|\n|Florida        |   15.4|       80|\n|Georgia        |   17.4|       60|\n|Hawaii         |    5.3|       83|\n|Idaho          |    2.6|       54|\n|Illinois       |   10.4|       83|\n|Indiana        |    7.2|       65|\n|Iowa           |    2.2|       57|\n|Kansas         |    6.0|       66|\n|Kentucky       |    9.7|       52|\n|Louisiana      |   15.4|       66|\n|Maine          |    2.1|       51|\n|Maryland       |   11.3|       67|\n|Massachusetts  |    4.4|       85|\n|Michigan       |   12.1|       74|\n|Minnesota      |    2.7|       66|\n|Mississippi    |   16.1|       44|\n|Missouri       |    9.0|       70|\n|Montana        |    6.0|       53|\n|Nebraska       |    4.3|       62|\n|Nevada         |   12.2|       81|\n|New Hampshire  |    2.1|       56|\n|New Jersey     |    7.4|       89|\n|New Mexico     |   11.4|       70|\n|New York       |   11.1|       86|\n|North Carolina |   13.0|       45|\n|North Dakota   |    0.8|       44|\n|Ohio           |    7.3|       75|\n|Oklahoma       |    6.6|       68|\n|Oregon         |    4.9|       67|\n|Pennsylvania   |    6.3|       72|\n|Rhode Island   |    3.4|       87|\n|South Carolina |   14.4|       48|\n|South Dakota   |    3.8|       45|\n|Tennessee      |   13.2|       59|\n|Texas          |   12.7|       80|\n|Utah           |    3.2|       80|\n|Vermont        |    2.2|       32|\n|Virginia       |    8.5|       63|\n|Washington     |    4.0|       73|\n|West Virginia  |    5.7|       39|\n|Wisconsin      |    2.6|       66|\n|Wyoming        |    6.8|       60|\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Means and standard deviations\n\n<br>\n<br>\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n  variable  mean    sd\n  <chr>    <dbl> <dbl>\n1 Murder    7.79  4.36\n2 UrbanPop 65.5  14.5 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Standardize the data\n\n<!-- Don't want the clustering algorithm to depend to an arbitrary variable unit -->\n\n\n::: scroll-container\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|               |     Murder|   UrbanPop|\n|:--------------|----------:|----------:|\n|Alabama        |  1.2425641| -0.5209066|\n|Alaska         |  0.5078625| -1.2117642|\n|Arizona        |  0.0716334|  0.9989801|\n|Arkansas       |  0.2323494| -1.0735927|\n|California     |  0.2782682|  1.7589234|\n|Colorado       |  0.0257146|  0.8608085|\n|Connecticut    | -1.0304190|  0.7917228|\n|Delaware       | -0.4334739|  0.4462940|\n|Florida        |  1.7476714|  0.9989801|\n|Georgia        |  2.2068599| -0.3827351|\n|Hawaii         | -0.5712305|  1.2062373|\n|Idaho          | -1.1911350| -0.7972496|\n|Illinois       |  0.5997002|  1.2062373|\n|Indiana        | -0.1350014| -0.0373063|\n|Iowa           | -1.2829727| -0.5899924|\n|Kansas         | -0.4105145|  0.0317794|\n|Kentucky       |  0.4389842| -0.9354212|\n|Louisiana      |  1.7476714|  0.0317794|\n|Maine          | -1.3059321| -1.0045069|\n|Maryland       |  0.8063350|  0.1008652|\n|Massachusetts  | -0.7778653|  1.3444088|\n|Michigan       |  0.9900104|  0.5844655|\n|Minnesota      | -1.1681755|  0.0317794|\n|Mississippi    |  1.9083874| -1.4881072|\n|Missouri       |  0.2782682|  0.3081225|\n|Montana        | -0.4105145| -0.8663354|\n|Nebraska       | -0.8008247| -0.2445636|\n|Nevada         |  1.0129698|  1.0680658|\n|New Hampshire  | -1.3059321| -0.6590781|\n|New Jersey     | -0.0890826|  1.6207519|\n|New Mexico     |  0.8292944|  0.3081225|\n|New York       |  0.7604162|  1.4134946|\n|North Carolina |  1.1966452| -1.4190215|\n|North Dakota   | -1.6044046| -1.4881072|\n|Ohio           | -0.1120420|  0.6535513|\n|Oklahoma       | -0.2727580|  0.1699510|\n|Oregon         | -0.6630682|  0.1008652|\n|Pennsylvania   | -0.3416362|  0.4462940|\n|Rhode Island   | -1.0074596|  1.4825804|\n|South Carolina |  1.5180772| -1.2117642|\n|South Dakota   | -0.9156219| -1.4190215|\n|Tennessee      |  1.2425641| -0.4518209|\n|Texas          |  1.1277670|  0.9989801|\n|Utah           | -1.0533784|  0.9989801|\n|Vermont        | -1.2829727| -2.3171363|\n|Virginia       |  0.1634711| -0.1754778|\n|Washington     | -0.8697030|  0.5153798|\n|West Virginia  | -0.4793928| -1.8335360|\n|Wisconsin      | -1.1911350|  0.0317794|\n|Wyoming        | -0.2268391| -0.3827351|\n\n\n:::\n:::\n\n\n\n:::\n\n\n## `kmeans()` in R\n\n<br>\n\n::: eqt\n\n- `kmeans()` function takes a matrix or data-frame or tibble and the number of centers/clusters we want to find.\n\n- We also set `nstart = 20-25` to have multiple initial starting positions in the hope of finding global optimal solution instead of local optimal solution\n\n- Use `set.seed()` for reproducibility\n\n:::\n\n\n## Within Cluster Sum of Squared Errors (WSS)\n\n::: cle\n\n- Calculate WSS for different values of K.\n\n- Choose K for which WSS first starts to diminish.\n\n- Visually deciphered with an **elbow graph**.\n\n- The number of clusters is taken at the elbow joint point.\n\n:::\n\n## K-means\n\n::: eqt\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nK-means clustering with 2 clusters of sizes 23, 27\n\nCluster means:\n      Murder   UrbanPop\n1  0.8961762  0.1939808\n2 -0.7634094 -0.1652429\n\nClustering vector:\n       Alabama         Alaska        Arizona       Arkansas     California \n             1              1              1              2              1 \n      Colorado    Connecticut       Delaware        Florida        Georgia \n             1              2              2              1              1 \n        Hawaii          Idaho       Illinois        Indiana           Iowa \n             2              2              1              2              2 \n        Kansas       Kentucky      Louisiana          Maine       Maryland \n             2              1              1              2              1 \n Massachusetts       Michigan      Minnesota    Mississippi       Missouri \n             2              1              2              1              1 \n       Montana       Nebraska         Nevada  New Hampshire     New Jersey \n             2              2              1              2              1 \n    New Mexico       New York North Carolina   North Dakota           Ohio \n             1              1              1              2              2 \n      Oklahoma         Oregon   Pennsylvania   Rhode Island South Carolina \n             2              2              2              2              1 \n  South Dakota      Tennessee          Texas           Utah        Vermont \n             2              1              1              2              2 \n      Virginia     Washington  West Virginia      Wisconsin        Wyoming \n             1              2              2              2              2 \n\nWithin cluster sum of squares by cluster:\n[1] 31.59219 30.59764\n (between_SS / total_SS =  36.5 %)\n\nAvailable components:\n\n[1] \"cluster\"      \"centers\"      \"totss\"        \"withinss\"     \"tot.withinss\"\n[6] \"betweenss\"    \"size\"         \"iter\"         \"ifault\"      \n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Tidy the information\n\n::: cle\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  Murder UrbanPop  size withinss cluster\n   <dbl>    <dbl> <int>    <dbl> <fct>  \n1  0.896    0.194    23     31.6 1      \n2 -0.763   -0.165    27     30.6 2      \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  totss tot.withinss betweenss  iter\n  <dbl>        <dbl>     <dbl> <int>\n1    98         62.2      35.8     1\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## `augment` the cluster identity\n\n\n::: scroll-container\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|.rownames      |     Murder|   UrbanPop|.cluster |\n|:--------------|----------:|----------:|:--------|\n|Alabama        |  1.2425641| -0.5209066|1        |\n|Alaska         |  0.5078625| -1.2117642|1        |\n|Arizona        |  0.0716334|  0.9989801|1        |\n|Arkansas       |  0.2323494| -1.0735927|2        |\n|California     |  0.2782682|  1.7589234|1        |\n|Colorado       |  0.0257146|  0.8608085|1        |\n|Connecticut    | -1.0304190|  0.7917228|2        |\n|Delaware       | -0.4334739|  0.4462940|2        |\n|Florida        |  1.7476714|  0.9989801|1        |\n|Georgia        |  2.2068599| -0.3827351|1        |\n|Hawaii         | -0.5712305|  1.2062373|2        |\n|Idaho          | -1.1911350| -0.7972496|2        |\n|Illinois       |  0.5997002|  1.2062373|1        |\n|Indiana        | -0.1350014| -0.0373063|2        |\n|Iowa           | -1.2829727| -0.5899924|2        |\n|Kansas         | -0.4105145|  0.0317794|2        |\n|Kentucky       |  0.4389842| -0.9354212|1        |\n|Louisiana      |  1.7476714|  0.0317794|1        |\n|Maine          | -1.3059321| -1.0045069|2        |\n|Maryland       |  0.8063350|  0.1008652|1        |\n|Massachusetts  | -0.7778653|  1.3444088|2        |\n|Michigan       |  0.9900104|  0.5844655|1        |\n|Minnesota      | -1.1681755|  0.0317794|2        |\n|Mississippi    |  1.9083874| -1.4881072|1        |\n|Missouri       |  0.2782682|  0.3081225|1        |\n|Montana        | -0.4105145| -0.8663354|2        |\n|Nebraska       | -0.8008247| -0.2445636|2        |\n|Nevada         |  1.0129698|  1.0680658|1        |\n|New Hampshire  | -1.3059321| -0.6590781|2        |\n|New Jersey     | -0.0890826|  1.6207519|1        |\n|New Mexico     |  0.8292944|  0.3081225|1        |\n|New York       |  0.7604162|  1.4134946|1        |\n|North Carolina |  1.1966452| -1.4190215|1        |\n|North Dakota   | -1.6044046| -1.4881072|2        |\n|Ohio           | -0.1120420|  0.6535513|2        |\n|Oklahoma       | -0.2727580|  0.1699510|2        |\n|Oregon         | -0.6630682|  0.1008652|2        |\n|Pennsylvania   | -0.3416362|  0.4462940|2        |\n|Rhode Island   | -1.0074596|  1.4825804|2        |\n|South Carolina |  1.5180772| -1.2117642|1        |\n|South Dakota   | -0.9156219| -1.4190215|2        |\n|Tennessee      |  1.2425641| -0.4518209|1        |\n|Texas          |  1.1277670|  0.9989801|1        |\n|Utah           | -1.0533784|  0.9989801|2        |\n|Vermont        | -1.2829727| -2.3171363|2        |\n|Virginia       |  0.1634711| -0.1754778|1        |\n|Washington     | -0.8697030|  0.5153798|2        |\n|West Virginia  | -0.4793928| -1.8335360|2        |\n|Wisconsin      | -1.1911350|  0.0317794|2        |\n|Wyoming        | -0.2268391| -0.3827351|2        |\n\n\n:::\n:::\n\n\n\n:::\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n## In-built function for visuals using `factoextra`\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=55%}\n:::\n:::\n\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n\n\n\n\n## [Determine the optimal number of clusters]{.font70}\n\n::: cle\n::: font80\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n       k model    tot.withinss\n   <int> <list>          <dbl>\n 1     1 <kmeans>        98   \n 2     2 <kmeans>        62.4 \n 3     3 <kmeans>        36.6 \n 4     4 <kmeans>        24.9 \n 5     5 <kmeans>        19.6 \n 6     6 <kmeans>        16.4 \n 7     7 <kmeans>        13.7 \n 8     8 <kmeans>        11.0 \n 9     9 <kmeans>         9.85\n10    10 <kmeans>         8.04\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n## [Determine the optimal number of clusters]{.font70}\n\n::: cle\n::: font80\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 3\n       k model    tot.withinss\n   <int> <list>          <dbl>\n 1     1 <kmeans>        98   \n 2     2 <kmeans>        62.4 \n 3     3 <kmeans>        36.6 \n 4     4 <kmeans>        24.9 \n 5     5 <kmeans>        19.6 \n 6     6 <kmeans>        16.4 \n 7     7 <kmeans>        13.7 \n 8     8 <kmeans>        11.0 \n 9     9 <kmeans>         9.85\n10    10 <kmeans>         8.04\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day26_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n\n\n## Extract the centroids\n\n::: cle\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  Cluster Murder UrbanPop\n    <int>  <dbl>    <dbl>\n1       1  1.17    -0.966\n2       2 -1.09    -1.22 \n3       3 -0.462    1.23 \n4       4  1.07     0.746\n5       5 -0.442    0.135\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n::: centered-content\n\n## <i class=\"fa fa-pencil-square-o\" style=\"font-size:48px;color:purple\"> Group Activity 1</i> {background=\"#ffdf9e\"}\n\n::: row\n::: left\n![](https://media.giphy.com/media/RKApDdwsQ6jkwd6RNn/giphy.gif)\n:::\n\n::: right\n\n<br>\n\n::: lqt\n\n- Please clone the `ca26-yourusername` repository from  [Github](https://github.com/DataScienceSpring24)\n- Please do problem 1 in the class activity for today\n:::\n:::\n:::\n\n`<div class=\"countdown\" id=\"timer_e4610d5c\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0;left:0;padding:3px 4px;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">20</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>`{=html}\n:::\n\n",
    "supporting": [
      "Day26_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"Day26_files/libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"Day26_files/libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}